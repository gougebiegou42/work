// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// PanoramaImgDao is the manager for logic model data accessing and custom defined data operations functions management.
type PanoramaImgDao struct {
	gmvc.M                // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      panoramaImgColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB         // DB is the raw underlying database management object.
	Table  string         // Table is the underlying table name of the DAO.
}

// PanoramaImgColumns defines and stores column names for table sys_post.
type panoramaImgColumns struct {
	PanoramaImgId    string // panoramaImgID
	Picture  string // 图片路径
	// Password  string // 账号密码
	// CreatedAt string // 创建时间
	// UpdatedAt string // 修改时间
	// DeletedAt string // 删除时间
}

// NewPanoramaImgDao creates and returns a new DAO object for table data access.
func NewPanoramaImgDao() *PanoramaImgDao {
	columns := panoramaImgColumns{
		PanoramaImgId:    "panoramaImg_id",
		Picture:  "picture",
		// Password:  "password",
		// CreatedAt: "created_at",
		// UpdatedAt: "updated_at",
		// DeletedAt: "deleted_at",
	}
	return &PanoramaImgDao{
		C:     columns,
		M:     g.DB("default").Model("panoramaImg").Safe(),
		DB:    g.DB("default"),
		Table: "panoramaImg",
	}
}
